name: CI

on:
  push:
    branches: [ main ]
    tags:     [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - run: dotnet restore src/SemanticModelMcpServer/SemanticModelMcpServer.csproj
    - run: dotnet build -c Release --no-restore
    - run: dotnet test -c Release --no-build --verbosity normal
    - run: dotnet publish src/SemanticModelMcpServer/SemanticModelMcpServer.csproj -c Release -o ./publish -p:PublishTrimmed=true -p:PublishSingleFile=true --runtime linux-x64 --self-contained true

    - uses: actions/upload-artifact@v4
      with:
        name: publish
        path: ./publish

  docker:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: publish
        path: ./publish

    - uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - uses: docker/setup-qemu-action@v3
    - uses: docker/setup-buildx-action@v3

    - uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ghcr.io/${{ github.repository }}/mcp-server:latest, ghcr.io/${{ github.repository }}/mcp-server:${{ github.sha }}

    - name: Generate SBOM
      uses: anchore/sbom-action@v0
      with:
        path: ./publish

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ghcr.io/${{ github.repository }}/mcp-server:latest
        format: table
        exit-code: 1
        ignore-unfixed: true

  markdownlint:
    name: Lint Markdown
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install markdownlint-cli
        run: npm install -g markdownlint-cli
      - name: Lint Markdown files
        run: markdownlint "promts/**/*.md" "docs/**/*.md"